<?xml version="1.0" encoding="utf-8"?>
<Patch>
	<Operation Class="PatchOperationReplace">
		<xpath>/Defs/InteractionDef[defName = "Chitchat"]/logRulesInitiator/rulesStrings</xpath>
		<value>
			<rulesStrings>
				<!-- generic default -->
				<li>r_logentry(p=0.1,tag=ChitChat_generic)->Hey, [RECIPIENT_nameDef]!</li>
				<!--Job Texts (initiator)-->
				<!--Cloudwatching-->
				<li>r_logentry(priority=4,INITIATOR_jobText==cloudwatching.,DAYPERIOD==morning,tag=CloudWatching)->[cloud_watching]</li>
				<li>r_logentry(priority=4,INITIATOR_jobText==cloudwatching.,DAYPERIOD==afternoon,tag=CloudWatching)->[cloud_watching]</li>
				<li>cloud_watching->Look at that cloud! Doesn't it [cloud_analogy] [a_cloudshape]?</li>
				<li>a_cloudshape->a [Animal]</li>
				<li>a_cloudshape->a [Apparel]</li>
				<li>a_cloudshape->a [TreeType]</li>
				<li>a_cloudshape->a [Vegetable]</li>
				<li>a_cloudshape->a [Weapon]</li>
				<li>cloud_analogy->just look like</li>
				<li>cloud_analogy->remind you of</li>
				<li>cloud_analogy(INITIATOR_intellectual_level>=5)->vaguely resemble</li>
				<!--Job Texts (recipient)-->
					<!--Butchering(priority 4)-->
					<li>r_logentry(priority=4,RECIPIENT_jobText==Butchering.,tag=Job_ButcheringSkill)->[job_recipient_butchering]</li>
					<li>job_recipient_butchering(RECIPIENT_cooking_level>=6)->Well, [RECIPIENT_nameDef] - luckily for us, looks like you know how to properly butcher!</li>
					<li>job_recipient_butchering(RECIPIENT_cooking_level&lt;6)->Mmm, [RECIPIENT_nameDef]... looks like you're wasting good meat there...</li>
					<!--Vomiting (priority 4)-->
					<li>r_logentry(priority=4,RECIPIENT_jobText==vomiting.)->[job_recipient_vomiting]</li>
						<!--gross-->
						<li>job_recipient_vomiting(tag=Job_Vomiting)->[vomiting_gross][RECIPIENT_nameDef]!</li>
						<li>vomiting_gross->Gross, </li>
						<li>vomiting_gross->Eww, </li>
							<!--dislike-->
							<li>vomiting_gross(INITIATOR_opinion&lt;0)->[vomiting_gross_dislike]</li>
							<li>vomiting_gross_dislike->That's disgusting, </li>
							<li>vomiting_gross_dislike->I hope you're going to clean up that mess, </li>
						<!--help offer-->
						<li>job_recipient_vomiting(INITIATOR_opinion>=0,tag=Job_Vomiting_help)->[vomiting_help_offer]</li>
						<li>job_recipient_vomiting(INITIATOR_trait==kind,tag=Job_Vomiting_help,priority=1)->[vomiting_help_offer]</li>
						<li>vomiting_help_offer->Oh my, [RECIPIENT_nameDef] - do you need help?</li>
					<!--Cooking and gathering ingredients-->
						<!--Simple meal (seated) 
						<li>r_logentry(priority=4,INITIATOR_jobText==Cooking simple meal.,INITIATOR_seated==Yes)->[cooking_simplemeal]</li>
						<li>cooking_simplemeal(INITIATOR_cooking_level>=6,priority=1)->A pity I don't have better ingredients to cook something tastier.</li>
						<li>cooking_simplemeal->It's simple cooking, I know - but it will have to do for now.</li>-->
				<!--Thoughts-->
					<!--ApparelDamaged-->
					<li>r_logentry(INITIATOR_thoughtDefName==ApparelDamaged,tag=ReactToThought_ApparelDamaged)->[apparel_damaged]</li>
					<li>apparel_damaged(INITIATOR_thoughtLabel==ratty apparel)->My outfit is starting to show holes here and there. [apparel_damaged_comment]</li>
					<li>apparel_damaged(INITIATOR_thoughtLabel==tattered apparel)->My outfit looks like it's about to fall apart. [apparel_damaged_comment]</li>
						<!--WILDCARDS-->
						<li>apparel_damaged_comment-></li>
						<li>apparel_damaged_comment(INITIATOR_social_level>=5)-> That's unacceptable - what would people think about me?</li>
						<li>apparel_damaged_comment(INITIATOR_crafting_level>=5)-> I'd better craft myself what I need - I can't walk around like this.</li>
					<!--Ate a special meal-->	
						<!--AteLavishMeal-->
						<li>r_logentry(INITIATOR_thoughtDefName==AteLavishMeal,tag=ReactToThought_AteMeal)->[meal_lavish]</li>
						<li>meal_lavish->I'm truly enjoying our meals - they are abundant, tasty and varied.</li>
						<!--AteFineMeal-->
						<li>r_logentry(INITIATOR_thoughtDefName==AteFineMeal,tag=ReactToThought_AteMeal)->[meal_fine]</li>
						<li>meal_fine->I'm enjoying our meals - they are tasty and varied.</li>
						<!--AteAwfulMeal-->
						<li>r_logentry(INITIATOR_thoughtDefName==AteAwfulMeal,tag=ReactToThought_AteMeal)->[meal_awful]</li>
						<li>meal_awful->Our meals are [disgusting]!</li>
						<!--AteRawFood-->
						<li>r_logentry(INITIATOR_thoughtDefName==AteRawFood,tag=ReactToThought_AteMeal)->[meal_raw]</li>
						<li>meal_raw->I had to eat raw food. Can't we have it cooked first?!</li>
						<!--AteKibble-->
						<li>r_logentry(INITIATOR_thoughtDefName==AteKibble,tag=ReactToThought_AteMeal)->[meal_kibble]</li>
						<li>meal_kibble->I had to eat animal kibble. It's [humiliating] - I don't get to be human any more.</li>
						<!--AteCorpse-->
						<li>r_logentry(INITIATOR_thoughtDefName==AteCorpse,tag=ReactToThought_AteMeal)->[meal_corpse]</li>
						<li>meal_corpse->I had to eat the raw flesh of a dead, unbutchered creature. That was [humiliating] and [disgusting].</li>
					
					<!--AteWithoutTable // AteInImpressiveDiningRoom-->
					<li>r_logentry(INITIATOR_faction==PlayerColony)->[thought_diningroom]</li>
						<!--AteInImpressiveDiningRoom-->
						<li>thought_diningroom(INITIATOR_thoughtDefName==AteInImpressiveDiningRoom,tag=ReactToThought_DiningRoom,priority=2)->[thought_diningroom_good]</li>
						<li>thought_diningroom_good(INITIATOR_thoughtLabel==decent dining room)->Last time I ate, it was in a [proper] dining room.</li>
						<li>thought_diningroom_good(INITIATOR_thoughtLabel==slightly impressive dining room)->Last time I ate, it was in a slightly impressive dining room.</li>
						<li>thought_diningroom_good(INITIATOR_thoughtLabel==somewhat impressive dining room)->Last time I ate, it was in an impressive dining room.</li>
						<li>thought_diningroom_good(INITIATOR_thoughtLabel==very impressive dining room)->Last time I ate, it was in a very impressive dining room.</li>
						<li>thought_diningroom_good(INITIATOR_thoughtLabel==extremely impressive dining room)->Last time I ate, it was in an extremely impressive dining room. I could stay there forever.</li>
						<li>thought_diningroom_good(INITIATOR_thoughtLabel==unbelievably impressive dining room)->Last time I ate, it was in an unbelievably impressive dining room. I could stay there forever.</li>
						<li>thought_diningroom_good(INITIATOR_thoughtLabel==wondrously impressive dining room)->Last time I ate, it was in a wonderful dining room. I could stay there forever.</li>
						<!--AteWithoutTable-->
						<li>thought_diningroom(INITIATOR_thoughtDefName==AteWithoutTable,priority=1)->[thought_atewotable]</li>
							<!-- Stressed || abrasive -->
							<li>thought_atewotable(INITIATOR_mood&lt;=0.4,tag=ReactToThought_AteWithoutTable)->[thought_atewotable_stressed]</li>
							<li>thought_atewotable(INITIATOR_trait==abrasive,tag=ReactToThought_AteWithoutTable)->[thought_atewotable_stressed]</li>
							<li>thought_atewotable_stressed->I had to eat without a [swearword]table! [hope_wont_happen_again_table]</li>
								<!--Initiator is not skilled in construction-->
								<li>hope_wont_happen_again_table(INITIATOR_construction_level&lt;4)->[thought_atewotable_construction_unskilled]</li>
									<!--Recipient is not skilled in construction-->
									<li>thought_atewotable_construction_unskilled(RECIPIENT_construction_level&lt;4)-></li>
									<!--Recipient is skilled in construction-->
									<li>thought_atewotable_construction_unskilled(RECIPIENT_construction_level>=4)->I hope you won't let this happen again, [RECIPIENT_nameDef].</li>								
								<!--Initiator is skilled in construction-->
								<li>hope_wont_happen_again_table(INITIATOR_construction_level>=4)->[thought_atewotable_construction_skilled]</li>
									<!--Recipient is not skilled in construction-->
									<li>thought_atewotable_construction_skilled(RECIPIENT_construction_level&lt;4)->I shouldn't have let this happen - I could've built one.</li>
									<!--Recipient is skilled in construction-->
									<li>thought_atewotable_construction_skilled(RECIPIENT_construction_level>=4)->We shouldn't have let this happen - we could've built one.</li>
							<!-- Calm -->
							<li>thought_atewotable(INITIATOR_mood>0.4)->[mood_calm]</li>
					<!--Almost decent dining room (default)-->
					<li>thought_diningroom->[thought_diningroom_default]</li>
						<!-- Stressed || abrasive -->
						<li>thought_diningroom_default(INITIATOR_mood&lt;=0.4,tag=ReactToThought_AteWithoutTable)->[thought_diningroom_stressed]</li>
						<li>thought_diningroom_default(INITIATOR_trait==abrasive,tag=ReactToThought_AteWithoutTable)->[thought_diningroom_stressed]</li>
							<li>thought_diningroom_stressed->Last time I ate, the dining area wasn't very nice - that's a bit [annoying].</li>
						<!-- Calm -->
						<li>thought_diningroom_default(INITIATOR_mood>0.4)->[mood_calm]</li>
					
					<!--DefeatedMechCluster-->
					<li>r_logentry(INITIATOR_thoughtDefName==DefeatedMechCluster,tag=ReactToThought_DefeatedMechCluster)->[thought_defeatcluster]</li>
					<li>thought_defeatcluster->That victory against the mech cluster was glorious!</li>
					<!--EnvironmentCold-->
					<li>r_logentry(INITIATOR_thoughtDefName==EnvironmentCold,tag=ReactToThought_EnvironmentCold)->[thought_environmentcold]</li>
					<li>thought_environmentcold(INITIATOR_thoughtLabel==chilly)->I'm uncomfortably cold.</li>
					<li>thought_environmentcold(INITIATOR_thoughtLabel==cold)->I'm [swearword_adverb]freezing!</li>
					<li>thought_environmentcold(INITIATOR_thoughtLabel==numbing cold)->I can't stop [swearword_adverb]shivering from the cold!</li>
					<li>thought_environmentcold(INITIATOR_thoughtLabel==absolutely freezing)->My teeth are [swearword_adverb]chattering so hard I can barely speak!</li>
					<!--EnvironmentDark-->
					<li>r_logentry(INITIATOR_thoughtDefName==EnvironmentDark,tag=ReactToThought_EnvironmentDark)->[thought_environmentdark]</li>
						<!--Special trait - undergrounder-->
						<li>thought_environmentdark(INITIATOR_trait==undergrounder,priority=1)->[thought_environmentdark_undergrounder]</li>
							<!--OUTDOORS-->
							<li>thought_environmentdark_undergrounder(OUTDOORS==No)->Indoors... no light... totally relaxing.</li>
						    <li>thought_environmentdark_undergrounder(OUTDOORS==Yes)->This darkness puts my mind at ease, as if it protected me.</li>
						<!--Special traits - night owl -->
						<li>thought_environmentdark(INITIATOR_trait==night owl,priority=1)->I really like this darkness - it's so relaxing...</li>
						<!--Other traits-->
						<li>thought_environmentdark->It's dark - [extra]</li>
						<!--WILDCARDS-->
						<li>extra->and I don't like it.</li>
						<li>extra->I hope I won't trip into something.</li>
						<li>extra->I can't see well enough to do my job properly.</li>
						<li>extra(INITIATOR_trait==pyromaniac)->we could put up more wall torches around here.</li>
						<li>extra(INITIATOR_trait==depressive)->just like each and every day of my life.</li>
					<!--EnvironmentHot-->
					<li>r_logentry(INITIATOR_thoughtDefName==EnvironmentHot,tag=ReactToThought_EnvironmentHot)->[thought_environmenthot]</li>
					<li>thought_environmenthot(INITIATOR_thoughtLabel==sweaty)->It's quite hot here.</li>
					<li>thought_environmenthot(INITIATOR_thoughtLabel==hot)->It's way too [swearword_adverb]hot here!</li>
					<li>thought_environmenthot(INITIATOR_thoughtLabel==sweltering hot)->I feel like I'm in a [swearword]furnace - I must get somewhere cooler!</li>
					<li>thought_environmenthot(INITIATOR_thoughtLabel==blistering hot)->This place is searing hot - I think I could [swearword_adverb]die from this heat!</li>
					<!--Expectations-->
					<!--Freed from slavery-->
					<li>r_logentry(INITIATOR_thoughtDefName==FreedFromSlavery,tag=ReactToThought_ExSlave)->[thought_freed]</li>
					<li>thought_freed->My life as a slave was a nightmare... I'm so thankful you guys freed me from that! </li>
					<li>thought_freed->Freeing me from slavery was a true noble thing to do. I'll be forever thankful for that.</li>
					<!--JoyActivityInImpressiveRecRoom-->
					<li>r_logentry(INITIATOR_thoughtDefName==JoyActivityInImpressiveRecRoom,tag=ReactToThought_JoyRoom)->[thought_joyroom]</li>
					<li>thought_joyroom(INITIATOR_thoughtLabel==decent rec room)->I think we have a decent rec room.</li>
					<li>thought_joyroom(INITIATOR_thoughtLabel==slightly impressive rec room)->I think we have a nice rec room.</li>
					<li>thought_joyroom(INITIATOR_thoughtLabel==somewhat impressive rec room)->I think we have a very nice rec room.</li>
					<li>thought_joyroom(INITIATOR_thoughtLabel==very impressive rec room)->I think our rec room is quite impressive!</li>
					<li>thought_joyroom(INITIATOR_thoughtLabel==extremely impressive rec room)->I think our rec room is extremely impressive!</li>
					<li>thought_joyroom(INITIATOR_thoughtLabel==unbelievably impressive rec room)->We're so lucky to have such an unbelievably impressive rec room!</li>
					<li>thought_joyroom(INITIATOR_thoughtLabel==wondrously impressive rec room)->Our rec room is wondrously impressive! I could stay there forever!</li>
					<!--MoodOffsetTorturedArtist-->
					<!--NeedBeauty-->
						<!-- hideous -->
						<li>r_logentry(INITIATOR_thoughtLabel==hideous environment,tag=ReactToThought_NeedBeauty_hideous)->[thought_needbeauty_hideous]</li>
						<li>thought_needbeauty_hideous->This place is unbearably grotesque. I can't look at this any more.</li>
						<li>thought_needbeauty_hideous(INITIATOR_trait==depressive)->This place is a perfect depiction of our future - bleak and dreary.</li>
						<li>thought_needbeauty_hideous(INITIATOR_trait==pyromaniac)->This place is so totally dismal we could burn it down to ashes - and even so, it would look better!</li>
						<!-- ugly -->
						<li>r_logentry(INITIATOR_thoughtLabel==ugly environment,tag=ReactToThought_NeedBeauty_ugly)->[thought_needbeauty_ugly]</li>
						<li>thought_needbeauty_ugly->This place is really ugly. I wish I didn't have to look at this any more.</li>
						<li>thought_needbeauty_ugly(INITIATOR_trait==depressive)->It's ugly here... but then again - it's OK: it's the best I'll ever get in this life, I'm sure.</li>
						<li>thought_needbeauty_ugly(INITIATOR_trait==pyromaniac)->This place is hopelessly awful. Let's burn it down and build a better one from scratch!</li>
						<!-- unsightly -->
						<li>r_logentry(INITIATOR_thoughtLabel==unsightly environment,tag=ReactToThought_NeedBeauty_unsightly)->[thought_needbeauty_unsightly]</li>
						<li>thought_needbeauty_unsightly->This place is kind of [unsightly]. I wish I didn't have to look at all this.</li>
						<!-- pretty -->
						<li>r_logentry(INITIATOR_thoughtLabel==pretty environment,tag=ReactToThought_NeedBeauty_pretty)->[thought_needbeauty_pretty]</li>
						<li>thought_needbeauty_pretty->This place looks nice.</li>
						<!-- beautiful -->
						<li>r_logentry(INITIATOR_thoughtLabel==beautiful environment,tag=ReactToThought_NeedBeauty_beautiful)->[thought_needbeauty_beautiful]</li>
						<li>thought_needbeauty_pretty->I really like this place. It's beautiful.</li>
						<!-- gorgeous -->
						<li>r_logentry(INITIATOR_thoughtLabel==gorgeous environment,tag=ReactToThought_NeedBeauty_gorgeous)->[thought_needbeauty_gorgeous]</li>
						<li>thought_needbeauty_gorgeous->This place is truly beautiful. It lifts me up and makes me love life!</li>
						<li>thought_needbeauty_gorgeous->This place is a dream come true. I'm so happy to be here!</li>
						<li>thought_needbeauty_gorgeous(INITIATOR_artistic>=5)->This place looks like a true masterwork of fine arts!</li>
					<!--NeedComfort-->
						<!-- uncomfortable -->
						<li>r_logentry(INITIATOR_thoughtLabel==uncomfortable,tag=ReactToThought_NeedComfort)->[thought_need_comfort1]</li>
						<li>thought_need_comfort1->My back is aching. Our furniture here is quite lacking.</li>
						<!-- comfortable -->
						<li>r_logentry(INITIATOR_thoughtLabel==comfortable,tag=ReactToThought_NeedComfort)->[thought_need_comfort2]</li>
						<li>thought_need_comfort2->I'm glad we have comfortable furniture around here.</li>
						<!-- quite comfortable -->
						<li>r_logentry(INITIATOR_thoughtLabel==quite comfortable,tag=ReactToThought_NeedComfort)->[thought_need_comfort3]</li>
						<li>thought_need_comfort3->I'm so glad we have nice and comfortable furniture around here!</li>
						<!-- extremely comfortable -->
						<li>r_logentry(INITIATOR_thoughtLabel==extremely comfortable,tag=ReactToThought_NeedComfort)->[thought_need_comfort4]</li>
						<li>thought_need_comfort4->This place is so cushy - we truly have excellent furniture around here!</li>
						<!-- luxuriantly comfortable -->
						<li>r_logentry(INITIATOR_thoughtLabel==luxuriantly comfortable,tag=ReactToThought_NeedComfort)->[thought_need_comfort5]</li>
						<li>thought_need_comfort5->Our furniture feels like Heaven! So comfy!</li>
					<!--NeedFood-->
						<!-- hungry or worse , recipient is cooking (priority 4) [must improve!] -->
						<li>r_logentry(INITIATOR_thoughtDefName==NeedFood,RECIPIENT__jobText==Cooking simple meal.,tag=ReactToThought_NeedFood_RecipientCooking,priority=4)->[thought_needfood_recipientcooking]</li>
						<li>thought_needfood_recipientcooking->[thought_needfood_hungry0]</li>
						<!-- hungry or worse , recipient is a professional cook -->
						<li>r_logentry(INITIATOR_thoughtDefName==NeedFood,RECIPIENT_cooking_level>=6,tag=ReactToThought_NeedFood_CookRecipient,priority=4)->[thought_needfood_cookrecipient]</li>
						<li>thought_needfood_cookrecipient(INITIATOR_trait==brawler,INITIATOR_mood&lt;0.5)->[damn_it], [RECIPIENT_nameDef] - get us some cooked food already or I swear I'll eat that [ugly] face of yours!</li>
						<li>thought_needfood_cookrecipient->Hey, [RECIPIENT_nameDef] - can you get us some food already?!</li>
						<!-- just hungry -->
						<li>r_logentry(INITIATOR_thoughtLabel==hungry,tag=ReactToThought_NeedFood)->[thought_needfood_hungry0]</li>
						<li>thought_needfood_hungry0->I'm really hungry.</li>
						<li>thought_needfood_hungry0->I'm feeling peckish.</li>
						<li>thought_needfood_hungry0->I could eat [animal_large]!</li>
						<li>thought_needfood_hungry0->I'm starving!</li>
						<li>thought_needfood_hungry0->I'm ravenous!</li>
						<li>thought_needfood_hungry0->I'm famished!</li>
						<li>thought_needfood_hungry0->I'm dying for something to eat!</li>
						<!-- ravenously hungry -->
						<li>r_logentry(INITIATOR_thoughtLabel==ravenously hungry,tag=ReactToThought_NeedFood)->[thought_needfood_hungry1]</li>
						<li>thought_needfood_hungry1->These hunger pangs are hard to ignore.</li>
						<!-- malnourished -->
						<li>r_logentry(INITIATOR_thoughtLabel==malnourished,tag=ReactToThought_NeedFood)->[thought_needfood_hungry2]</li>
						<li>thought_needfood_hungry2->It's been so long since I ate. I'm all fuzzy and it's hard to focus.</li>
						<!-- badly malnourished -->
						<li>r_logentry(INITIATOR_thoughtLabel==badly malnourished,tag=ReactToThought_NeedFood)->[thought_needfood_hungry3]</li>
						<li>thought_needfood_hungry3->I can feel my body wasting away... I'd eat almost anything to stop the pain...</li>
						<!-- starving -->
						<li>r_logentry(INITIATOR_thoughtLabel==starving,tag=ReactToThought_NeedFood)->[thought_needfood_hungry4]</li>
						<li>thought_needfood_hungry4->I can barely think about anything but food. I need food. Now.</li>
						<!-- advanced starvation -->
						<li>r_logentry(INITIATOR_thoughtLabel==advanced starvation,tag=ReactToThought_NeedFood)->[thought_needfood_hungry5]</li>
						<li>thought_needfood_hungry5->I can barely move or think about anything but food. I feel so weak...</li>
						<!-- extreme starvation -->
						<li>r_logentry(INITIATOR_thoughtLabel==extreme starvation,tag=ReactToThought_NeedFood)->[thought_needfood_hungry6]</li>
						<li>thought_needfood_hungry6->Food... food... anything... please...</li>
					<!--NeedJoy-->
						<!-- recreation-starved -->
						<li>r_logentry(INITIATOR_thoughtLabel==recreation-starved,tag=ReactToThought_NeedJoy)->[thought_need_joy1]</li>
						<li>thought_need_joy1->It's been so long since I did anything for fun on my own time.</li>
						<!-- recreation-deprived -->
						<li>r_logentry(INITIATOR_thoughtLabel==recreation-deprived,tag=ReactToThought_NeedJoy)->[thought_need_joy2]</li>
						<li>thought_need_joy2->We need more variation in recreation activities, and I need time to enjoy them.</li>
						<!-- recreation unfulfilled -->
						<li>r_logentry(INITIATOR_thoughtLabel==recreation unfulfilled,tag=ReactToThought_NeedJoy)->[thought_need_joy3]</li>
						<li>thought_need_joy3->We need more variation in the recreation activities, and I need time to enjoy them.</li>
						<!-- recreation satisfied -->
						<li>r_logentry(INITIATOR_thoughtLabel==recreation satisfied,tag=ReactToThought_NeedJoy)->[thought_need_joy4]</li>
						<li>thought_need_joy4->I've been having a great time doing various things I like to do.</li>
						<!-- recreation fully satisfied -->
						<li>r_logentry(INITIATOR_thoughtLabel==recreation fully satisfied,tag=ReactToThought_NeedJoy)->[thought_need_joy5]</li>
						<li>thought_need_joy5->I've been enjoying myself so much, I love it!</li>						
					<!--NeedRest-->
						<!-- drowsy -->
						<li>r_logentry(INITIATOR_thoughtLabel==drowsy,tag=ReactToThought_NeedRest)->[thought_need_rest1]</li>
						<li>thought_need_rest1->I haven't slept in a while. It's hard to keep focus.</li>
						<!-- tired -->
						<li>r_logentry(INITIATOR_thoughtLabel==tired,tag=ReactToThought_NeedRest)->[thought_need_rest2]</li>
						<li>thought_need_rest2->I'm so tired. I just want to lay down and rest for a few minutes...</li>
						<!-- exhausted -->
						<li>r_logentry(INITIATOR_thoughtLabel==exhausted,tag=ReactToThought_NeedRest)->[thought_need_rest3]</li>
						<li>thought_need_rest3->I'm so exhausted I can barely stand. Let me sleep...</li>					
					<!--NeedRoomSize-->
						<!-- confined interior -->
						<li>r_logentry(INITIATOR_thoughtLabel==confined interior,tag=ReactToThought_NeedSpace)->[thought_need_space1]</li>
						<li>thought_need_space1->Our living spaces are so cramped, it's difficult to breathe! [ask_for_larger_rooms]</li>
						<li>thought_need_space1(INITIATOR_construction_level>=5,priority=1)->I should build larger living spaces - these ones are way too cramped!</li>
						<!-- cramped interior -->
						<li>r_logentry(INITIATOR_thoughtLabel==cramped interior,tag=ReactToThought_NeedSpace)->[thought_need_space2]</li>
						<li>thought_need_space2->Can't we get larger living spaces? It feels so cramped! [ask_for_larger_rooms]</li>
						<li>thought_need_space2(INITIATOR_construction_level>=5,priority=1)->I should build larger living spaces - these ones are somewhat cramped.</li>
						<!-- spacious interior [not implemented] -->
						<!-- LOCAL WILDCARDS-->
						<li>ask_for_larger_rooms(RECIPIENT_construction_level&lt;5)-></li>
						<li>ask_for_larger_rooms(RECIPIENT_construction_level>=5)->Hey, [RECIPIENT_nameDef]! Could you take care of it?</li>
					<!--NewColonyHope-->
					<li>r_logentry(INITIATOR_thoughtDefName==NewColonyHope,tag=ReactToThought_NewColony)->[thought_newcolhope]</li>
					<li>thought_newcolhope->I'm getting used to this new life, but it's still exciting. I hope this works out...</li>
						<!--Special cases-->
						<li>thought_newcolhope(INITIATOR_trait==ascetic)->By humbly observing the planet's behaviour, we shall survive and thrive against all odds.</li>
						<!--Other cases-->
						<li>thought_newcolhope(INITIATOR_trait==hard worker)->Our hard work got us safely so far. Let's keep this up, and we'll be allright!</li>
						<li>thought_newcolhope(INITIATOR_trait==industrious)->Our hard work got us safely so far. Let's keep this up, and we'll be allright!</li>
						<li>thought_newcolhope(INITIATOR_trait==iron-willed)->We never gave up, and now here we are - strong and ready to face what lies ahead.</li>
						<li>thought_newcolhope(INITIATOR_trait==optimist)->So far, so good - right? We won past challenges, we shall win the future ones too! </li>
						<li>thought_newcolhope(INITIATOR_trait==sanguine)->So far, so good - right? We won past challenges, we shall win the future ones too!</li>
						<li>thought_newcolhope(INITIATOR_trait==steadfast)->We never gave up, and now here we are - strong and ready to face what lies ahead.</li>
						<li>thought_newcolhope(INITIATOR_trait==tough)->We managed to endure every setback and hardship so far, so we're perfectly ready for the next ones!</li>
					<!--NewColonyOptimism-->
					<li>r_logentry(INITIATOR_thoughtDefName==NewColonyOptimism,tag=ReactToThought_NewColony)->[thought_newcolopt]</li>
					<li>thought_newcolopt->It's a tough situation - but I feel I can handle it.</li>
						<!--Special cases-->
						<li>thought_newcolopt(INITIATOR_trait==ascetic)->Are we stranded and lost? No - we are in a motherly wilderness, where we can find our true selves.</li>
						<!--Other cases-->
						<li>thought_newcolopt(INITIATOR_trait==fast learner)->We're in a rought spot, but I'm sure we can quickly adapt and work things out.</li>
						<li>thought_newcolopt(INITIATOR_trait==hard worker)->Ok. Let's put our minds and bodies to work. We can do this!</li>
						<li>thought_newcolopt(INITIATOR_trait==industrious)->Ok. Let's put our minds and bodies to work. We can do this!</li>
						<li>thought_newcolopt(INITIATOR_trait==iron-willed)->By sheer willpower, we shall come out of this. Mark my words!</li>
						<li>thought_newcolopt(INITIATOR_trait==optimist)->This is going to be a great challenge - one we can [surely] win!</li>
						<li>thought_newcolopt(INITIATOR_trait==sanguine)->This is going to be an exciting challenge - one we'll [surely] win!</li>
						<li>thought_newcolopt(INITIATOR_trait==steadfast)->By sheer willpower, we will get through this! I'm sure!</li>
						<li>thought_newcolopt(INITIATOR_trait==tough)->Come what may, nothing can defeat us! Let's do this!</li>
						<li>thought_newcolopt(INITIATOR_construction_level>=4)->Let's start building the basic buildings - we'll be fine.</li>
						<li>thought_newcolopt(INITIATOR_medical_level>=4)->If you have any medical issues, I can help. Do not worry - we'll be allright.</li>
						<li>thought_newcolopt(INITIATOR_plants_level>=5)->I believe we may grow our own food here - and that will [surely] give us a great start!</li>
						<li>thought_newcolopt(INITIATOR_animals_level>=5,INITIATOR_shooting_level>=5)->I believe we may hunt for food here - and that will [surely] give us a great start!</li>
					<!--ObservedLayingCorpse-->
					<li>r_logentry(INITIATOR_thoughtDefName==ObservedLayingCorpse,tag=ReactToThought_ObservedLayingCorpse)->[thought_corpse]</li>
					<li>thought_corpse->[saw_a_body] It was [disturbing].</li>
					<li>thought_corpse->[saw_a_body] It was [disturbing].</li>
					<li>thought_corpse(INITIATOR_trait==psychopath,priority=1)->[saw_a_body]</li>
					<li>thought_corpse(INITIATOR_trait==bloodlust,priority=1)->[saw_a_body]</li>
					<li>thought_corpse(INITIATOR_trait==cannibal,priority=1)->[saw_a_body]</li>
					<li>saw_a_body->I saw a dead body laying on the ground.</li>
					<li>saw_a_body->I saw an unburied body.</li>
					<!--ObservedLayingRottingCorpse-->
					<li>r_logentry(INITIATOR_thoughtDefName==ObservedLayingRottingCorpse,tag=ReactToThought_ObservedLayingRottingCorpse)->[thought_rotting_corpse]</li>
					<li>thought_rotting_corpse->[saw_a_rotting_body] It was [disgusting].</li>
					<li>thought_rotting_corpse->[saw_a_rotting_body] It was [disgusting].</li>
					<li>thought_rotting_corpse(INITIATOR_trait==psychopath,priority=1)->[saw_a_rotting_body]</li>
					<li>thought_rotting_corpse(INITIATOR_trait==bloodlust,priority=1)->[saw_a_rotting_body]</li>
					<li>thought_rotting_corpse(INITIATOR_trait==cannibal,priority=1)->[saw_a_rotting_body]</li>
					<li>saw_a_rotting_body->I saw a rotting body laying on the ground.</li>
					<li>saw_a_rotting_body->I saw an unburied rotting body.</li>					
					<!--Rescued-->
					<li>r_logentry(INITIATOR_thoughtDefName==Rescued,tag=ReactToThought_Rescued)->[thought_rescued]</li>
					<li>thought_rescued->I'm so thankful you guys rescued me. Without your help, I probably wouldn't be here today.</li>
					<li>thought_rescued->Rescuing me was a true noble and life-saving thing to do. I'll be forever thankful for that.</li>
					<!--Sick-->
					<li>r_logentry(INITIATOR_thoughtDefName==Sick,tag=ReactToThought_Sick)->[thought_sick]</li>
					<li>thought_sick->I'm not... I'm not feeling well...</li>
					<li>thought_sick->My health could be better...</li>
					<li>thought_sick->Ugh... will this [swearword]sickness ever go away!?</li>
					<li>thought_sick(INITIATOR_trait==wimp)->Ah, I'm feeling horrible... I... I might pass out soon!</li>
					<li>thought_sick(INITIATOR_trait==tortured artist)->Sickness: rich fuel for my creativity, yet painful dagger in the flesh still.</li>
					<li>thought_sick(INITIATOR_trait==sickly)->[damn_it], I'm sick again... same old story...</li>
					<li>thought_sick(INITIATOR_trait==super-immune)->Ah - this [swearword]sickness. I shouldn't even be sick! I never get sick!</li>
					<li>thought_sick(INITIATOR_trait==transhumanist)->Sick - again! The human body is so [swearword]weak and flawed...</li>
					<!--SleepDisturbed-->
					<li>r_logentry(INITIATOR_thoughtDefName==SleepDisturbed)->[thought_sleepdisturbed]</li>
						<!--Kind (priority)-->
						<li>thought_sleepdisturbed(INITIATOR_trait==kind,priority=1)->[thought_sleepdisturbed_calm]</li>
						<!--Stressed-->
						<li>thought_sleepdisturbed(INITIATOR_mood&lt;0.4,tag=ReactToThought_SleepDisturbed)->[thought_sleepdisturbed_stressed]</li>
						<li>thought_sleepdisturbed_stressed->[accuse_gender_someone] disturbed my [swearword]sleep. [damn_it] - that's [swearword][annoying]!</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==abrasive)->Why can't I [swearword_adverb]get some [swearword]undisturbed sleep here!?</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==bloodlust)->When I find out [accuse_gender_who] disturbed my [swearword]sleep, I swear I'll shred [accuse_gender_objective] to pieces with my bare hands!</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==brawler)->Next time [accuse_gender_someone] disturbs my [swearword]sleep, I'll get up and punch [accuse_gender_objective] right in the face!</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==quick sleeper)->Why can't I [swearword_adverb]get some [swearword]undisturbed quiet in the few hours I sleep!? Is it too much to ask? [damn_it]!</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==tortured artist)->[damn_it]! Someone [swearword_adverb]disturbed me while I was dreaming of my next masterpiece! Such great art - forever lost!</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==industrious)->How am I supposed to have productive working hours if I can't [swearword_adverb]get some [swearword]undisturbed sleep!?</li>	
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==hard worker)->I'd love to help around here - but it's just impossible if I can't [swearword_adverb]get some [swearword]undisturbed sleep!</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==lazy)->My sleeping hours are totally important to me - so could you just stop [swearword_adverb]disturbing my [swearword]sleep?!</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==slothful)->There is something that's totally important for me - quiet while I sleep. And I'm getting none - just [swearword]none!</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==beautiful)->Each day, we need at least 7 hours of undisturbed sleep to preserve our skin. So - can I just [swearword_adverb]get at least a few of them?</li>
						<li>thought_sleepdisturbed_stressed(INITIATOR_trait==pretty)->I'd like to look nice when I wake up, but can I? No. Because it seems I can't [swearword_adverb]get some [swearword]undisturbed sleep!</li>						
						<!--Calm-->
						<li>thought_sleepdisturbed(INITIATOR_mood>=0.4)->[thought_sleepdisturbed_calm]</li>
						<li>thought_sleepdisturbed_calm(tag=ReactToThought_SleepDisturbed_Dream)->I was having such [nice] dream when somebody entered my room and woke me up.</li>
						<li>thought_sleepdisturbed_calm(tag=ReactToThought_SleepDisturbed)->Let's be more quiet near sleeping people, OK? Someone disturbed my sleep, recently.</li>
						<li>thought_sleepdisturbed_calm->[mood_calm]</li>
					<!--SleptInBarracks-->
					<li>r_logentry(tag=ReactToThought_SleptInBarracks)->[thought_sleptinbarracks]</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==awful barrack)->Not only I must share my room - it's also a [ugly] one!</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==dull barrack)->My room is slightly [ugly]! And I must share it with other people, too!</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==mediocre barrack)->I share my room with others - I can accept that. But... couldn't it be a nicer one at least?</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==decent barrack)->My room is nice enough, but I find it a bit [annoying] sharing a sleeping space.</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==slightly impressive barrack)->My room is quite nice. Unfortunately, I have to share it with others.</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==impressive barrack)->My room is very nice. If only I didn't have to share it with others...</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==very impressive barrack)->My room is very impressive. I don't even mind sharing it!</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==extremely impressive barrack)->My room is so extremely impressive that sharing it doesn't even bother me!</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==unbelievably impressive barrack)->I can't believe how nice is my shared room!</li>
					<li>thought_sleptinbarracks(INITIATOR_thoughtLabel==wondrously impressive barrack)->My shared room is just a dream come true!</li>
					<!--SleptInBedroom-->
					<li>r_logentry(INITIATOR_thoughtDefName==SleptInBedroom,tag=ReactToThought_Bedroom)->[thought_bedroom] [what_about_yours]</li>
					<li>thought_bedroom(INITIATOR_thoughtLabel==awful bedroom)->Luckily, I have my own bedroom. Too bad it's [ugly] as hell.</li>
					<li>thought_bedroom(INITIATOR_thoughtLabel==decent bedroom)->I sleep in a [proper] bedroom.</li>
					<li>thought_bedroom(INITIATOR_thoughtLabel==slightly impressive bedroom)->I like my bedroom - it's a nice one.</li>
					<li>thought_bedroom(INITIATOR_thoughtLabel==impressive bedroom)->I sleep in an impressive bedroom. It's great!</li>
					<li>thought_bedroom(INITIATOR_thoughtLabel==very impressive bedroom)->I sleep in a very impressive bedroom. I just love it!</li>
					<li>thought_bedroom(INITIATOR_thoughtLabel==extremely impressive bedroom)->I get to sleep in an extremely impressive bedroom! </li>
					<li>thought_bedroom(INITIATOR_thoughtLabel==unbelievably impressive bedroom)->My bedroom is truly astounding!</li>
					<li>thought_bedroom(INITIATOR_thoughtLabel==wondrously impressive bedroom)->Sleeping in my bedroom feels like Heaven. Just wondrous!</li>
					<!--SleptInCold-->
					<li>r_logentry(INITIATOR_thoughtDefName==SleptInCold,tag=ReactToThought_SleptInCold)->[thought_sleptincold]</li>
					<li>thought_sleptincold->[slept_in_cold] [hope_wont_happen_again_heatsource]</li>
					<li>slept_in_cold->I slept in the cold.</li>
					<li>slept_in_cold->I couldn't sleep well - the cold wouldn't let me.</li>
						<!--Initiator is not skilled in construction-->
						<li>hope_wont_happen_again_heatsource(INITIATOR_construction_level&lt;5)->[thought_sleptincold_construction_unskilled]</li>
							<!--Recipient is not skilled in construction-->
							<li>thought_sleptincold_construction_unskilled(RECIPIENT_construction_level&lt;5)-></li>
							<!--Recipient is skilled in construction-->
							<li>thought_sleptincold_construction_unskilled(RECIPIENT_construction_level>=5)->I hope you won't let this happen again, [RECIPIENT_nameDef].</li>								
						<!--Initiator is skilled in construction-->
						<li>hope_wont_happen_again_heatsource(INITIATOR_construction_level>=5)->[thought_sleptincold_construction_skilled]</li>
							<!--Recipient is not skilled in construction-->
							<li>thought_sleptincold_construction_skilled(RECIPIENT_construction_level&lt;5)->I shouldn't have let this happen - I could've built a [proper] heat source.</li>
							<!--Recipient is skilled in construction-->
							<li>thought_sleptincold_construction_skilled(RECIPIENT_construction_level>=5)->We shouldn't have let this happen - we could've built a [proper] heat source.</li>					
					<!--SleptInHeat-->
					<li>r_logentry(INITIATOR_thoughtDefName==SleptInHeat,tag=ReactToThought_SleptInHeat)->[thought_sleptinheat]</li>
					<li>thought_sleptinheat->[slept_in_heat] [hope_wont_happen_again_cooler]</li>
					<li>slept_in_heat->I had to sleep in unbearable heat.</li>
					<li>slept_in_heat->I couldn't sleep well - the heat wouldn't let me.</li>					
						<!--Initiator is not skilled in construction-->
						<li>hope_wont_happen_again_cooler(INITIATOR_construction_level&lt;5)->[thought_sleptinheat_construction_unskilled]</li>
							<!--Recipient is not skilled in construction-->
							<li>thought_sleptinheat_construction_unskilled(RECIPIENT_construction_level&lt;5)-></li>
							<!--Recipient is skilled in construction-->
							<li>thought_sleptinheat_construction_unskilled(RECIPIENT_construction_level>=5)->I hope you won't let this happen again, [RECIPIENT_nameDef].</li>								
						<!--Initiator is skilled in construction-->
						<li>hope_wont_happen_again_cooler(INITIATOR_construction_level>=5)->[thought_sleptinheat_construction_skilled]</li>
							<!--Recipient is not skilled in construction-->
							<li>thought_sleptinheat_construction_skilled(RECIPIENT_construction_level&lt;5)->I shouldn't have let this happen - I could've built a cooler.</li>
							<!--Recipient is skilled in construction-->
							<li>thought_sleptinheat_construction_skilled(RECIPIENT_construction_level>=5)->We shouldn't have let this happen - we could've built a cooler.</li>
					<!--SleptOnGround-->
					<li>r_logentry(INITIATOR_thoughtDefName==SleptOnGround,tag=ReactToThought_SleptOnGround)->[thought_sleptonground]</li>
					<li>thought_sleptonground->[slept_on_ground] [hope_wont_happen_again_bed]</li>
					<li>slept_on_ground->I had to sleep on the ground like an animal - [humiliating]!</li>
						<!--Initiator is not skilled in construction-->
						<li>hope_wont_happen_again_bed(INITIATOR_construction_level&lt;4)->[thought_sleptonground_construction_unskilled]</li>
							<!--Recipient is not skilled in construction-->
							<li>thought_sleptonground_construction_unskilled(RECIPIENT_construction_level&lt;4)-></li>
							<!--Recipient is skilled in construction-->
							<li>thought_sleptonground_construction_unskilled(RECIPIENT_construction_level>=4)->I hope you won't let this happen again, [RECIPIENT_nameDef].</li>								
						<!--Initiator is skilled in construction-->
						<li>hope_wont_happen_again_bed(INITIATOR_construction_level>=4)->[thought_sleptonground_construction_skilled]</li>
							<!--Recipient is not skilled in construction-->
							<li>thought_sleptonground_construction_skilled(RECIPIENT_construction_level&lt;4)->I shouldn't have let this happen - I could've built a bed for myself.</li>
							<!--Recipient is skilled in construction-->
							<li>thought_sleptonground_construction_skilled(RECIPIENT_construction_level>=4)->We shouldn't have let this happen - we could've built a bed for me.</li>					
					<!--SleptOutside-->
					<li>r_logentry(INITIATOR_thoughtDefName==SleptOutside,tag=ReactToThought_SleptOutside)->[thought_sleptoutside]</li>
					<li>thought_sleptoutside->[slept_outside] [hope_wont_happen_again_outside]</li>
					<li>slept_outside->I had to sleep [outdoors] - [humiliating]!</li>
					<li>slept_outside->I had the [humiliating] experience of sleeping without a [proper] roof!</li>
						<!--Initiator is not skilled in construction-->
						<li>hope_wont_happen_again_outside(INITIATOR_construction_level&lt;4)->[thought_sleptoutside_construction_unskilled]</li>
							<!--Recipient is not skilled in construction-->
							<li>thought_sleptoutside_construction_unskilled(RECIPIENT_construction_level&lt;4)-></li>
							<!--Recipient is skilled in construction-->
							<li>thought_sleptoutside_construction_unskilled(RECIPIENT_construction_level>=4)->I hope you won't let this happen again, [RECIPIENT_nameDef].</li>								
						<!--Initiator is skilled in construction-->
						<li>hope_wont_happen_again_outside(INITIATOR_construction_level>=4)->[thought_sleptoutside_construction_skilled]</li>
							<!--Recipient is not skilled in construction-->
							<li>thought_sleptoutside_construction_skilled(RECIPIENT_construction_level&lt;4)->I shouldn't have let this happen - I could've built a roofed room for myself.</li>
							<!--Recipient is skilled in construction-->
							<li>thought_sleptoutside_construction_skilled(RECIPIENT_construction_level>=4)->We shouldn't have let this happen - we could've built a roofed room for me.</li>					
					<!--Undergrounder outdoors-->
					<li>r_logentry(INITIATOR_thoughtDefName==UndergrounderOutdoors,tag=ReactToThought_UndergrounderOutdoors)->[thought_undergrounderoutdoors]</li>
					<li>thought_undergrounderoutdoors->I don't like being outside. I'd rather be indoors.</li>
				<!--Thought (Recipient)-->
				<li>r_logentry(INITIATOR_opinion>=0,tag=WhatsUp)->So, [RECIPIENT_nameDef] - [whatsup]</li>
				<li>whatsup(INITIATOR_intellectual_level&lt;5)->wassup?</li>
				<li>whatsup(INITIATOR_intellectual_level&lt;3)->sup?</li>
				<li>whatsup(INITIATOR_intellectual_level&lt;5)->what's popping?</li>
				<li>whatsup(INITIATOR_intellectual_level&lt;5)->what's cracking?</li>
				<li>whatsup->what's up?</li>
				<li>whatsup->what's going on?</li>
				<li>whatsup->what's on your mind?</li>
				<li>whatsup->what's new?</li>
				
				<!--===MOOD===-->
				<li>r_logentry(INITIATOR_mood>=0.4)->[mood_calm]</li>
				<li>mood_calm(tag=Calm)->|||smiles|||</li>
				<!--Mood (Recipient)-->
				<li>r_logentry(INITIATOR_opinion>=0,tag=HowAreYou)->Hey, [RECIPIENT_nameDef]. [howareyou]</li>
				<li>howareyou->How are you?</li>
				<li>howareyou->How are things?</li>
				<li>howareyou->How have you been?</li>
				<li>howareyou->How's life?</li>
				<li>howareyou->How are you getting along?</li>
				<li>howareyou(RECIPIENT_mood&lt;0.5)->Are you OK?</li>
				
				<!--===TRAITS===-->
					<!--Ascetic-->
					<li>r_logentry(INITIATOR_trait==ascetic,tag=AsceticWisdom)->[trait_ascetic]</li>
					<li>trait_ascetic->Being truly rich is not about having great possessions - it's about having few wants.</li>
					<li>trait_ascetic->He who fears death will never do anything worth of a man who is alive.</li>
					<li>trait_ascetic->You can control your mind — not outside events. Absorb this, and you shall find strength.</li>
					<li>trait_ascetic(INITIATOR_animals_passion==Minor)->Observe the [Animal] and its simpler life - there is a lot to learn from it.</li>
					<li>trait_ascetic(INITIATOR_animals_passion==Major)->Observe the [Animal] and its simpler life - there is a lot to learn from it.</li>
					<!--Optimist & Sanguine-->
					<li>r_logentry(INITIATOR_trait==optimist,tag=LuckyFuture)->[lucky_future]</li>
					<li>r_logentry(INITIATOR_trait==sanguine,tag=LuckyFuture)->[lucky_future]</li>
					<li>lucky_future(DAYPERIOD==night)->[can_feel_it] today [lucky_day]</li>
					<li>lucky_future(DAYPERIOD==morning)->[can_feel_it] today [lucky_day]</li>
					<li>lucky_future(DAYPERIOD==afternoon)->[can_feel_it] tomorrow [lucky_day]</li>
					<li>lucky_future(DAYPERIOD==evening)->[can_feel_it] tomorrow [lucky_day]</li>
					<li>can_feel_it->I can feel it -</li>
					<li>can_feel_it->I have a feeling</li>
					<li>lucky_day->will be my lucky day!</li>
					<li>lucky_day->is going to be my lucky day!</li>
					<!--Psychically sensitive and hipersensitive-->
					<!--Good visions-->
					<li>r_logentry(INITIATOR_trait==psychically sensitive)->[trait_psy_sensitive]</li>
					<li>r_logentry(INITIATOR_trait==psychically hypersensitive)->[trait_psy_sensitive]</li>
					<li>trait_psy_sensitive(tag=PsyVisionGood)->[vision_start] about a [AdjectiveFriendly] [PersonJob] visiting a [AdjectiveFriendly] [Community].</li>
					<li>trait_psy_sensitive(tag=PsyVisionGood)->[vision_start] about a [AdjectiveFriendly] [PersonJob] admiring a [nice] [TerrainFeature] from afar.</li>
					<li>trait_psy_sensitive(tag=PsyVisionGood)->[vision_start] about a [AdjectiveFriendly] [Color] [Animal] in a [AdjectiveLarge] [TreeType] forest.</li>
					<li>trait_psy_sensitive(tag=PsyVisionGood)->[vision_start] about a [AdjectiveFriendly] [Animal] eating [Vegetable]s.</li>
					<li>trait_psy_sensitive(tag=PsyVisionGood)->[vision_start] about a [Community] of [AdjectiveFriendly] [Color] [Animal]s.</li>
					<li>trait_psy_sensitive(tag=PsyVisionGood)->[vision_start] about [Quantity_adjphrase] [PersonJob]s who were [VerbFriendly] in a [AdjectiveFriendly] [Community].</li>
					<li>trait_psy_sensitive(tag=PsyVisionGood)->[vision_start] about a [AdjectiveLarge] [Animal] saving a [AdjectiveAngsty] [Community] from a [AdjectiveBadass] [Enemy].</li>
					<li>trait_psy_sensitive(tag=PsyVisionGood)->[vision_start] about a [AdjectiveFriendly] [PersonJob] wearing a [Color] [Apparel].</li>
					<!--Visions-->
					<li>trait_psy_sensitive(tag=PsyVision)->[vision_start] about a [AdjectiveLarge] [AnimalGroup] of [Animal]s in a [TreeType] forest.</li>
					<li>trait_psy_sensitive(tag=PsyVision)->[vision_start] about [Animal]-shaped clouds over a [AdjectiveAny] [TerrainFeature].</li>
					<li>trait_psy_sensitive(tag=PsyVision)->[vision_start] about a [Color] [Animal] and a [Color] [Animal] competing for the same [TerrainFeature].</li>
					<li>trait_psy_sensitive(tag=PsyVision)->[vision_start] about a [AdjectiveBadass] [Enemy] struggling against a [AdjectiveBadass] [Enemy].</li>
					<li>trait_psy_sensitive(tag=PsyVision)->[vision_start] about a [AdjectiveAny] [Apparel] dancing in the wind over a [TerrainFeature].</li>
					<li>trait_psy_sensitive(tag=PsyVision)->[vision_start] about a group of [PersonJob]s visiting a [Community] to buy [AdjectiveAny] [Apparel]s.</li>
					<li>trait_psy_sensitive(tag=PsyVision)->[vision_start] about a [PersonJob] arguing with a [PersonJob] about a [AdjectiveAny] [Weapon].</li>
					<li>trait_psy_sensitive(tag=PsyVision)->[vision_start] about a group of [PersonJob]s visiting a [Community] to buy [AdjectiveAny] [Weapon]s.</li>
					<!--Bad visions-->
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about a [AdjectiveBadass] [Enemy] with a [AdjectiveBadass] [Weapon] covered in [Gore].</li>
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about [Quantity_adjphrase] [AdjectiveBadass] [Enemy]s - and one of them wielded a [AdjectiveLarge] [AdjectiveBadass] [Weapon].</li>
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about a [AdjectiveAngsty] [PersonJob] running from a [AdjectiveBadass] [Enemy].</li>
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about a [AdjectiveBadass] [Mechanoid] chasing a group of [PersonJob]s into a [TerrainFeature].</li>
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about [AdjectiveBadass] [Mechanoid]s mercilessly destroying a [AdjectiveFriendly] [Community].</li>
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about a [AdjectiveAngsty] [Community] near a [TerrainFeature].</li>
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about a [AdjectiveAngsty] [PersonJob] near a [TerrainFeature].</li>
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about [Enemy]-shaped clouds over a [AdjectiveAngsty] [TerrainFeature].</li>
					<li>trait_psy_sensitive(tag=PsyVisionBad)->[vision_start] about two coffins - one had a dead [PersonJob] in it, the other was empty.</li>
					<li>vision_start->I just had a [vision_adj] vision</li>
						<li>vision_adj->peculiar</li>
						<li>vision_adj->startling</li>
						<li>vision_adj->strange</li>
						<li>vision_adj->fading</li>
						<li>vision_adj->fleeting</li>
						<li>vision_adj->sudden</li>
						<li>vision_adj->momentary</li>
						<li>vision_adj->colorful</li>
						<li>vision_adj->clear</li>
						<li>vision_adj->sudden</li>
					
				<!--===WEATHER===-->
				<!--Weather==Clear-->
				<li>r_logentry(WEATHER==clear)->[weather_clear]</li>
					<!--Good temperature for humans-->
					<li>weather_clear(TEMPERATURE>=-10,TEMPERATURE&lt;=35)->[weather_clear_goodtemp]</li>
						<!--Indoors (priority=1)-->
						<li>weather_clear_goodtemp(OUTDOORS==No,tag=WeatherGoodtempIndoors,priority=1)->[weather_goodtemp_indoors]</li>
						<!--Outdoors (default)-->
						<li>weather_clear_goodtemp(OUTDOORS==Yes,tag=WeatherClearGoodtempOutdoors)->[weather_clear_goodtemp_outdoors]</li>
							<!--Mood-->
							<li>weather_clear_goodtemp_outdoors(INITIATOR_mood>=0.7,priority=1)->What a [nice] weather we're having!</li>
							<li>weather_clear_goodtemp_outdoors(INITIATOR_mood>=0.7,priority=1)->Such a [nice] [DAYPERIOD]!</li>
							<li>weather_clear_goodtemp_outdoors->It certainly helps to have such a [nice] weather.</li>
							<li>weather_clear_goodtemp_outdoors->This [nice] weather is good for us.</li>
							<li>weather_clear_goodtemp_outdoors->We're having a [nice] [DAYPERIOD].</li>
							<li>weather_clear_goodtemp_outdoors(INITIATOR_mood&lt;0.4,priority=1)->The weather is [nice], at least...</li>	
					<!--Extreme cold for humans-->
					<li>weather_clear(TEMPERATURE&lt;-10)->[weather_toocold]</li>
					<!--Extreme heat for humans-->
					<li>weather_clear(TEMPERATURE>35)->[weather_toohot]</li>
					
				<!--Weather==Fog-->
				<li>r_logentry(WEATHER==fog)->[weather_fog]</li>
					<!--Good temperature for humans-->
					<li>weather_fog(TEMPERATURE>=-10,TEMPERATURE&lt;=35)->[weather_fog_goodtemp]</li>
						<!--Indoors (priority=1)-->
						<li>weather_fog_goodtemp(OUTDOORS==No,tag=WeatherGoodtempIndoors,priority=1)->[weather_goodtemp_indoors]</li>
						<!--Outdoors (default)-->
						<li>weather_fog_goodtemp(OUTDOORS==Yes,tag=WeatherFogGoodtempOutdoors)->[weather_fog_goodtemp_outdoors]</li>
							<!--Initiator mood-->
							<li>weather_fog_goodtemp_outdoors(INITIATOR_mood>=0.4)->It's pretty foggy out here.</li>
							<li>weather_fog_goodtemp_outdoors(INITIATOR_mood>=0.2,INITIATOR_mood&lt;0.4)->This [swearword]fog won't let me see a [swearword]thing.</li>
							<li>weather_fog_goodtemp_outdoors(INITIATOR_mood&lt;0.2)->[swearword]fog! Can't see a [swearword]thing out here! [damn_it]!</li>
						<!--Hunting skill (recipient)-->
						<li>weather_fog_goodtemp(RECIPIENT_shooting_level>=5,RECIPIENT_animals_level>=5,tag=HuntWithFog)->I guess this fog means no hunting for you today?</li>
						<!--Trait==Too smart-->
						<li>weather_fog_goodtemp(INITIATOR_trait==too smart,tag=WeatherFogToosmart)->[fog_fact]</li>
						<li>fog_fact(INITIATOR_intellectual_level>=10)->Fog is a visible aerosol consisting of tiny water droplets or ice crystals suspended in the air at or near the planet's surface.</li>
						<li>fog_fact(INITIATOR_intellectual_level>=7)->Fog is sometimes considered a type of low-lying cloud usually resembling stratus.</li>
						<li>fog_fact(INITIATOR_intellectual_level>=5)->Fog is heavily influenced by nearby bodies of water, topography and wind conditions.</li>
						<li>fog_fact->Fog is known to show up when water vapor, or water in its gaseous form, condenses.</li>
						<!--Trait==Wimp-->
						<li>weather_fog_goodtemp(INITIATOR_trait==wimp,tag=WeatherFogWimp)->I'm [scared]... what if some [horrible] [monster] suddenly comes out of this [eerie] [mist]?</li>
					<!--Extreme cold for humans-->
					<li>weather_fog(TEMPERATURE&lt;-10)->[weather_toocold]</li>
					<!--Extreme heat for humans-->
					<li>weather_fog(TEMPERATURE>35)->[weather_toohot]</li>
					
				<!--Weather==Rain-->
				<li>r_logentry(WEATHER==rain)->[weather_rain]</li>
					<!--Good temperature for humans-->
					<li>weather_rain(TEMPERATURE>=-10,TEMPERATURE&lt;=35)->[weather_rain_goodtemp]</li>
						<!-- Indoors -->
						<li>weather_rain_goodtemp(OUTDOORS==No,tag=WeatherRainGoodtempIndoors)->[weather_rain_goodtemp_indoors]</li>
						<li>weather_rain_goodtemp_indoors->Mmm... It's raining.</li>
						<li>weather_rain_goodtemp_indoors->I think it's raining out there.</li>
						<li>weather_rain_goodtemp_indoors->Can you hear it? It's raining.</li>
						<li>weather_rain_goodtemp_indoors(INITIATOR_thoughtDefName==SoakingWet)->I got all drenched in the [swearword]rain! [rain_drenched]</li>
						<li>rain_drenched(INITIATOR_thoughtDefName==EnvironmentCold,priority=1)->[thought_environmentcold]</li>
						<li>rain_drenched(INITIATOR_thoughtDefName==Sick,priority=1)->I'm feeling [swearword]sick already, and now this...</li>
						<li>rain_drenched(INITIATOR_trait==sickly,priority=1)->Now I'll [surely] catch some nasty [swearword]cold...</li>
						<li>rain_drenched-></li>
						<!-- Outdoors -->
						<li>weather_rain_goodtemp(OUTDOORS==Yes,tag=WeatherRainGoodtempOutdoors)->[weather_rain_goodtemp_outdoors]</li>
						<li>weather_rain_goodtemp_outdoors->This rain is drenching my clothes - maybe I'd better get inside.</li>
						<li>weather_rain_goodtemp_outdoors->I'm soaking wet - maybe I'd better get inside.</li>
						<li>weather_rain_goodtemp_outdoors(TEMPERATURE&lt;=5,INITIATOR_trait==sickly)->I'll get inside - or I'll [surely] catch a cold or worse.</li>
						<li>weather_rain_goodtemp_outdoors(TEMPERATURE&lt;=5,INITIATOR_trait==wimp)->I'll get inside - I'd rather not catch a cold.</li>
					<!--Extreme cold for humans-->
					<li>weather_rain(TEMPERATURE&lt;-10)->[weather_toocold]</li>
					<!--Extreme heat for humans-->
					<li>weather_rain(TEMPERATURE>35)->[weather_toohot]</li>
				<!--CHITCHAT WILDCARDS: dictionary-->
				<!--animal - large-->
				<li>animal_large->a horse</li>
				<li>animal_large->a muffalo</li>
				<li>animal_large->an elephant</li>
				<!--annoying-->
				<li>annoying->annoying</li>
				<li>annoying->bad</li>
				<li>annoying->irritating</li>
				<li>annoying->infuriating</li>
				<li>annoying->maddening</li>
				<li>annoying->bothersome</li>
				<li>annoying(INITIATOR_intellectual_level>=5)->exasperating</li>
				<!--disgusting (dead body/meal)-->
				<li>disgusting->disgusting</li>
				<li>disgusting->nauseating</li>
				<li>disgusting->sickening</li>
				<li>disgusting->gross</li>
				<li>disgusting(INITIATOR_intellectual_level>=5)->revolting</li>
				<li>disgusting(INITIATOR_intellectual_level>=10)->repugnant</li>
				<!--disturbing (dead body)-->
				<li>disturbing->disturbing</li>
				<li>disturbing->unsettling</li>
				<li>disturbing->gut-wrenching</li>
				<li>disturbing->gross</li>
				<li>disturbing(INITIATOR_intellectual_level>=5)->perturbing</li>
				<li>disturbing(INITIATOR_intellectual_level>=5)->disquieting</li>
				<li>disturbing(INITIATOR_intellectual_level>=10)->abhorrent</li>
				<li>disturbing(INITIATOR_intellectual_level>=10)->abominable</li>
				<!--eerie-->
				<li>eerie->strange</li>
				<li>eerie->eerie</li>
				<li>eerie->otherworldy</li>
				<li>eerie->unearthly</li>
				<li>eerie->spooky</li>
				<!--fix (verb, metaphoric)-->
				<li>fix->fix</li>
				<li>fix->manage</li>
				<li>fix->handle</li>
				<li>fix->deal with</li>
				<li>fix->see to</li>
				<li>fix->take care of</li>
				<li>fix(INITIATOR_intellectual_level>=5)->remedy</li>
				<li>fix(INITIATOR_intellectual_level>=10)->rectify</li>
				<!--horrible (monster)-->
				<li>horrible->terrible</li>
				<li>horrible->horrible</li>
				<li>horrible->unholy</li>
				<li>horrible->ugly</li>
				<li>horrible->fearsome</li>
				<li>horrible->frightening</li>
				<li>horrible->ghastly</li>
				<li>horrible->ghoulish</li>
				<!--humiliating-->
				<li>humiliating->humiliating</li>
				<li>humiliating->demeaning</li>
				<li>humiliating->embarassing</li>
				<li>humiliating->mortifying</li>
				<li>humiliating(INITIATOR_intellectual_level>=5)->undignified</li>
				<li>humiliating(INITIATOR_intellectual_level>=10)->discomfiting</li>
				<li>humiliating(INITIATOR_intellectual_level>=10)->disgraceful</li>
				<li>humiliating(INITIATOR_intellectual_level>=15)->ignominous</li>
				<!--mist-->
				<li>mist->mist</li>
				<li>mist->fog</li>				
				<!--monster-->
				<li>monster->monster</li>
				<li>monster->beast</li>
				<li>monster->fiend</li>
				<li>monster->abomination</li>
				<li>monster->creature</li>
				<li>monster->ghost</li>
				<li>monster->alien</li>				
				<!--nice (weather)-->
				<li>nice->nice</li>
				<li>nice->good</li>
				<li>nice->pleasant</li>
				<li>nice->wonderful</li>
				<li>nice->fair</li>
				<li>nice->fine</li>
				<!--outdoors-->
				<li>outdoors->outdoors</li>
				<li>outdoors->in the open</li>
				<li>outdoors->outside</li>
				<!--proper-->
				<li>proper->fitting</li>
				<li>proper->suitable</li>
				<li>proper->regular</li>
				<li>proper->decent</li>
				<li>proper(INITIATOR_intellectual_level>=5)->conventional</li>
				<!--scared-->
				<li>scared->so scared</li>
				<li>scared->scared stiff</li>
				<li>scared->scared witless</li>
				<li>scared->shaking like a leaf</li>
				<li>scared->terrified</li>
				<li>scared->worried</li>
				<!--swearword-->
				<li>swearword(INITIATOR_mood>=0.4,priority=1)-></li>
				<li>swearword-></li>
				<li>swearword->blasted </li>
				<li>swearword->blighted </li>
				<li>swearword->bloody </li>
				<li>swearword->damn </li>
				<li>swearword->frigging </li>			
				<li>swearword->sodding </li>
				<li>swearword->wretched </li>
					<!--abrasive-->
					<li>swearword(INITIATOR_trait==abrasive)->[swearword_abrasive] </li>
					<li>swearword_abrasive->frakking</li>
					<li>swearword_abrasive->fucking</li>
				<!--swearword (adverb)-->
				<li>swearword_adverb(INITIATOR_mood>=0.4,priority=1)-></li>
				<li>swearword_adverb-></li>
				<li>swearword_adverb->bloody </li>
				<li>swearword_adverb->frigging </li>
					<!--abrasive-->
					<li>swearword_adverb(INITIATOR_trait==abrasive)->[swearword_adverb_abrasive] </li>
					<li>swearword_adverb_abrasive->frakking</li>
					<li>swearword_adverb_abrasive->fucking</li>
				<!--stupid-->
				<li>stupid->stupid</li>
				<li>stupid->lame</li>
				<li>stupid->dumb</li>
				<li>stupid->ignorant</li>
				<li>stupid->witless</li>
				<!--surely-->
				<li>surely->surely</li>
				<li>surely->certainly</li>
				<li>surely->obviously</li>
				<li>surely->clearly</li>
				<li>surely->definitely</li>
				<li>surely(INITIATOR_intellectual_level>=10)->unquestionably</li>
				<li>surely(INITIATOR_intellectual_level>=5)->undeniably</li>
				<!--ugly-->
				<li>ugly->ugly</li>
				<li>ugly->hideous</li>
				<li>ugly->horrible</li>
				<li>ugly->frightful</li>
				<li>ugly->grisly</li>
				<li>ugly->gruesome</li>
				<li>ugly->grim</li>
				<li>ugly(INITIATOR_intellectual_level>=5)->repugnant</li>
				<li>ugly(INITIATOR_intellectual_level>=5)->vile</li>
				<li>ugly(INITIATOR_intellectual_level>=5)->grotesque</li>
				<!--unsightly-->
				<li>unsightly->unsightly</li>
				<li>unsightly->messy</li>
				<li>unsightly->shabby</li>
				<li>unsightly->sloppy</li>				
				<li>unsightly->trashy</li>
				<li>unsightly->trashed</li>
				<li>unsightly->unkempt</li>
				<li>unsightly(INITIATOR_intellectual_level>=5)->unappealing</li>
				<li>unsightly(INITIATOR_intellectual_level>=5)->unattractive</li>				
				<li>unsightly(INITIATOR_intellectual_level>=10)->bedraggled</li>
				<!--CHITCHAT WILDCARDS: common sentences-->
				<!-- accuses from misandrist/mysoginist -->
				<li>accuse_gender_objective(INITIATOR_trait==misandrist)->him</li>
				<li>accuse_gender_objective(INITIATOR_trait==misogynist)->her</li>
				<li>accuse_gender_objective->him</li>
				<li>accuse_gender_who(INITIATOR_trait==misandrist)->the [stupid] guy that</li>
				<li>accuse_gender_who(INITIATOR_trait==misogynist)->the [stupid] bitch that</li>
				<li>accuse_gender_who->who</li>						
				<li>accuse_gender_someone(INITIATOR_trait==misandrist)->some [stupid] guy</li>
				<li>accuse_gender_someone(INITIATOR_trait==misogynist)->some [stupid] bitch</li>
				<li>accuse_gender_someone->someone</li>
				<!-- damn it! -->
				<li>damn_it->blasted hell</li>
				<li>damn_it->bloody hell</li>
				<li>damn_it->damn</li>
				<li>damn_it->damn it</li>				
				<li>damn_it->darn</li>
				<li>damn_it->darn it</li>
				<li>damn_it->heck</li>
				<li>damn_it->hell</li>
					<!-- Abrasive -->
					<li>damn_it(INITIATOR_trait==abrasive)->What the [swearword]fuck</li>
				<!--Extreme cold felt-->
					<!--Clothes are not enough-->
					<li>weather_toocold(INITIATOR_thoughtLabel==chilly,priority=1)->I should get better clothing - I'm almost freezing.</li>
					<li>weather_toocold(INITIATOR_thoughtLabel==cold,priority=1)->I should get better clothing - I'm cold!</li>
					<li>weather_toocold(INITIATOR_thoughtLabel==numbing cold,priority=1)->I should get better clothing - I'm freezing!</li>
					<li>weather_toocold(INITIATOR_thoughtLabel==absolutely freezing,priority=1)->I should get better clothing - I'm totally numbed by the cold!</li>
					<!--Clothes are enough-->
					<li>weather_toocold->Luckily, my gear is warm enough to protect me from this extreme cold!</li>
				<!--Extreme heat felt-->
					<!--Clothes are not enough-->
					<li>weather_toohot(INITIATOR_thoughtLabel==sweaty,priority=1)->I should get better clothing - I'm sweating.</li>
					<li>weather_toohot(INITIATOR_thoughtLabel==hot,priority=1)->I should get better clothing - I'm feeling very hot!</li>
					<li>weather_toohot(INITIATOR_thoughtLabel==sweltering hot,priority=1)->I should get better clothing - I'm feeling extremely hot!</li>
					<li>weather_toohot(INITIATOR_thoughtLabel==blistering hot,priority=1)->I should get better clothing - I'm melting!</li>
					<!--Clothes are enough-->
					<li>weather_toohot->Luckily, my gear is good enough to protect me from this scorching heat!</li>
					<!--Weather good temperature indoors (no windows)-->
					<li>weather_goodtemp_indoors->I'm curious about what's the weather like out there.</li>
					<li>weather_goodtemp_indoors->I wonder what's the weather like out there.</li>					
				<!--What about yours?-->
				<li>what_about_yours->What about yours, [RECIPIENT_nameDef]?</li>
			</rulesStrings>
		</value>
	</Operation>
	
<!-- === XP change for chitchat === -->	
	<Operation Class="PatchOperationReplace">
		<xpath>/Defs/InteractionDef[defName = "Chitchat"]/initiatorXpGainAmount</xpath>
		<value>
			<initiatorXpGainAmount>2</initiatorXpGainAmount>
		</value>
	</Operation>


<!-- === Sentence_SocialFightStarted === -->	
	<Operation Class="PatchOperationReplace">
		<xpath>/Defs/RulePackDef[defName = "Sentence_SocialFightStarted"]/rulePack/rulesStrings</xpath>
		<value>
		  <rulesStrings>
			<li>sent-></li>
		  </rulesStrings>
		</value>
	</Operation>

</Patch>
